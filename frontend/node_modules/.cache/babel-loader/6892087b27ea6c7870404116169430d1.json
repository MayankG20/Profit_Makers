{"ast":null,"code":"const Validator = require('validator');\n\nconst isEmpty = require('is-empty');\n\nmodule.exports = function validateRegisterInput(data) {\n  let errors = {};\n  console.log(data); // console.log(\"fsdafsd\");\n\n  if (isEmpty(data.name)) {\n    data.name = \"\";\n  }\n\n  if (isEmpty(data.email)) {\n    data.email = \"\";\n  }\n\n  if (isEmpty(data.password)) {\n    data.password = \"\";\n  }\n\n  if (isEmpty(data.password2)) {\n    data.password2 = \"\";\n  }\n\n  if (Validator.isEmpty(data.name)) {\n    errors.name = \"Name field is required\";\n  }\n\n  if (Validator.isEmpty(data.email)) {\n    errors.email = \"Email field is required\";\n  } else if (!Validator.isEmail(data.email)) {\n    errors.email = \"Email is invalid\";\n  }\n\n  if (Validator.isEmpty(data.password)) {\n    errors.psswd = \"Password field is required\";\n  }\n\n  if (Validator.isEmpty(data.password2)) {\n    errors.psswd2 = \"Password field is required\";\n  }\n\n  if (!Validator.isLength(data.password, {\n    min: 8,\n    max: 25\n  })) {\n    errors.psswd1 = \"Password Length must be between 8 and 25\";\n  }\n\n  if (!Validator.equals(data.password, data.password2)) {\n    errors.psswd2 = \"Passwords must be same\";\n  }\n\n  console.log(errors);\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n};","map":{"version":3,"sources":["/home/mayank/Desktop/sem4/dass/Assignment2/Profit_Makers/mern-stack-boilerplate/frontend/src/validation/register.js"],"names":["Validator","require","isEmpty","module","exports","validateRegisterInput","data","errors","console","log","name","email","password","password2","isEmail","psswd","psswd2","isLength","min","max","psswd1","equals","isValid"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAMC,OAAO,GAAID,OAAO,CAAC,UAAD,CAAxB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,SAASC,qBAAT,CAA+BC,IAA/B,EAAqC;AACrD,MAAIC,MAAM,GAAG,EAAb;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAHqD,CAIrD;;AACA,MAAGJ,OAAO,CAACI,IAAI,CAACI,IAAN,CAAV,EAAsB;AACrBJ,IAAAA,IAAI,CAACI,IAAL,GAAY,EAAZ;AACA;;AACD,MAAGR,OAAO,CAACI,IAAI,CAACK,KAAN,CAAV,EAAuB;AACtBL,IAAAA,IAAI,CAACK,KAAL,GAAa,EAAb;AACA;;AACD,MAAGT,OAAO,CAACI,IAAI,CAACM,QAAN,CAAV,EAA0B;AACzBN,IAAAA,IAAI,CAACM,QAAL,GAAe,EAAf;AACA;;AACD,MAAGV,OAAO,CAACI,IAAI,CAACO,SAAN,CAAV,EAA2B;AAC1BP,IAAAA,IAAI,CAACO,SAAL,GAAgB,EAAhB;AACA;;AAED,MAAGb,SAAS,CAACE,OAAV,CAAkBI,IAAI,CAACI,IAAvB,CAAH,EAAgC;AAC/BH,IAAAA,MAAM,CAACG,IAAP,GAAY,wBAAZ;AACA;;AAED,MAAGV,SAAS,CAACE,OAAV,CAAkBI,IAAI,CAACK,KAAvB,CAAH,EAAiC;AAChCJ,IAAAA,MAAM,CAACI,KAAP,GAAe,yBAAf;AACA,GAFD,MAGK,IAAG,CAACX,SAAS,CAACc,OAAV,CAAkBR,IAAI,CAACK,KAAvB,CAAJ,EAAkC;AACtCJ,IAAAA,MAAM,CAACI,KAAP,GAAe,kBAAf;AACA;;AAED,MAAGX,SAAS,CAACE,OAAV,CAAkBI,IAAI,CAACM,QAAvB,CAAH,EAAoC;AACnCL,IAAAA,MAAM,CAACQ,KAAP,GAAe,4BAAf;AACA;;AAED,MAAGf,SAAS,CAACE,OAAV,CAAkBI,IAAI,CAACO,SAAvB,CAAH,EAAqC;AACpCN,IAAAA,MAAM,CAACS,MAAP,GAAgB,4BAAhB;AACA;;AAED,MAAG,CAAChB,SAAS,CAACiB,QAAV,CAAmBX,IAAI,CAACM,QAAxB,EAAkC;AAACM,IAAAA,GAAG,EAAE,CAAN;AAASC,IAAAA,GAAG,EAAC;AAAb,GAAlC,CAAJ,EAAwD;AACvDZ,IAAAA,MAAM,CAACa,MAAP,GAAgB,0CAAhB;AACA;;AAED,MAAG,CAACpB,SAAS,CAACqB,MAAV,CAAiBf,IAAI,CAACM,QAAtB,EAAgCN,IAAI,CAACO,SAArC,CAAJ,EAAoD;AACnDN,IAAAA,MAAM,CAACS,MAAP,GAAgB,wBAAhB;AACA;;AAEDR,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAO;AACNA,IAAAA,MADM;AAENe,IAAAA,OAAO,EAAEpB,OAAO,CAACK,MAAD;AAFV,GAAP;AAIA,CAlDD","sourcesContent":["const Validator = require('validator');\nconst isEmpty  = require('is-empty');\n\nmodule.exports = function validateRegisterInput(data) {\n\tlet errors = {};\n\n\tconsole.log(data);\n\t// console.log(\"fsdafsd\");\n\tif(isEmpty(data.name)){\n\t\tdata.name = \"\";\n\t}\n\tif(isEmpty(data.email)){\n\t\tdata.email = \"\";\n\t}\n\tif(isEmpty(data.password)){\n\t\tdata.password= \"\";\n\t}\n\tif(isEmpty(data.password2)){\n\t\tdata.password2= \"\";\n\t}\n\n\tif(Validator.isEmpty(data.name)){\n\t\terrors.name=\"Name field is required\";\n\t}\n\n\tif(Validator.isEmpty(data.email)){\n\t\terrors.email = \"Email field is required\";\n\t}\n\telse if(!Validator.isEmail(data.email)){\n\t\terrors.email = \"Email is invalid\";\n\t}\n\n\tif(Validator.isEmpty(data.password)){\n\t\terrors.psswd = \"Password field is required\"\n\t}\n\n\tif(Validator.isEmpty(data.password2)){\n\t\terrors.psswd2 = \"Password field is required\"\n\t}\n\n\tif(!Validator.isLength(data.password, {min: 8, max:25})){\n\t\terrors.psswd1 = \"Password Length must be between 8 and 25\";\n\t}\n\n\tif(!Validator.equals(data.password, data.password2)){\n\t\terrors.psswd2 = \"Passwords must be same\"\n\t}\n\n\tconsole.log(errors);\n\treturn {\n\t\terrors,\n\t\tisValid: isEmpty(errors)\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}